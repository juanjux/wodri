DMD & Vibed
    - Install DMD from DigitalMars (Ubuntu package)
    - Download dub
    - cd ~wodri/backend/source/db
    - dub upgrade (to fetch dependencies)
    - dub fetch libevent

LIBSCRYPT
    - sudo apt-get install libscrypt0 libscrypt-dev

POSTFIX & SPAMASSASSIN:
    - Edit (as root) the /etc/hosts file and put 127.0.0.1 host.example.com (or whatever the host is)
    - sudo apt-get install postfix => set as "Internet Site" an input your domain.
    - Edit (as root) /etc/postfix/main.fx and put the retriver's path in the mailbox_command option.

        #mailbox_command = procmail -a "$EXTENSION"
        mailbox_command = /home/juanjux/webmail/backend/test/fake_mailbox_command

        smtpd_recipient_restrictions =
            permit_mynetworks,
            permit_sasl_authenticated,
            reject_unauth_destination,
            reject_invalid_hostname,
            reject_unauth_pipelining,
            reject_non_fqdn_sender,
            reject_unknown_sender_domain,
            reject_non_fqdn_recipient,
            reject_unknown_recipient_domain,
            check_client_access hash:$config_directory/access_client,
            check_sender_access hash:$config_directory/access_sender
            permit

    - sudo apt-get install spamassassin razor pyzor
    - Edit (as root)/etc/mail/spamassassin/local.cf and edit/add:

        add_header spam SetSpamTag score=_SCORE_
        required_score 3.0
        report_safe 0
        use_razor2 1
        use_pyzor 1

    - Run "pyzor discover" in the shell.
    - Run as root:

          group add spamd
          useradd -g spamd -s /bin/false -d /var/log/spamassassin spamd
          mkdir /var/log/spamassassin
          chown spamd:spamd /var/log/spamassassin

    - Edit /etc/default/spamassassin and change or add:
          ENABLED=1
          CRON=1
          SAHOME="/var/log/spamassassin/"
          OPTIONS="--create-prefs --max-children 2 --username spamd -H ${SAHOME} -s ${SAHOME}spamd.log"

    - Edit /etc/postfix/master.cf, find the line "smtp inet n - - - - smtpd" for:
          smtp      inet  n       -       -       -       -       smtpd -o content_filter=spamassassin

    - Edit /etc/postfix/master.cf add at the end:
          spamassassin unix -     n       n       -       -       pipe
                user=spamd argv=/usr/bin/spamc -f -e
                        /usr/sbin/sendmail -oi -f ${sender} ${recipient}

MONGODB:
    - Add Mongo repositories and install Mongo's metapackage, follow instructions from:
        http://docs.mongodb.org/manual/tutorial/install-mongodb-on-ubuntu/
        (NOTE: Developed with Mongo 2.6, Mongo 2.4 or older wont work)
    - edit (as root) /etc/mongod.conf, change these settings (change WEBMAILDIR for the package
      (directory on your system).
        # Where to store the data.
        dbpath=WEBMAILDIR/backend/mongodb/data
        #where to log
        logpath=WEBMAILDIR/backend/mongodb/log/mongodb.log
    - mkdir WEBMAILDIR/backend/mongodb
    - mkdir WEBMAILDIR/backend/mongodb/data
    - mkdir WEBMAILDIR/backend/mongodb/log
    - sudo chown -R mongodb:nogroup WEBMAILDIR/backend/mongodb

    (Note: on your distribution mongodb could be running under a different user/group, if
    in doubt: ls -l the original data and log dirs of mongo and check the permission)

    - Run the mongo command and run these commands changing WEBMAILDIR for the
      full path to real directory and SOMESALT for some random string:

      use webmail
      myuser =
      {
              "loginName": "MYLOGINNAME",
              "name": "MYNAME",
              "surname": "MYSURNAME",
              "admin": true,
              "adresses": ["juanjux@juanjux.mooo.com", "juanjo.alvarez@juanjux.mooo.com"],
      }
      db.users.insert(myuser)
      userid = db.users.find().next()._id

      mydomain =
      {
              "name": "MYDOMAIN",
              "postMaster": userid,
              "defaultUser": userid,
              "domainAdmin": userid
      }
     db.domain.insert(mydomain)
     domainid = db.domain.find().next()._id

     retriever_config =
     {
               "module" : "retriever",
               "mainDir" : "/home/juanjux/webmail",
               "ownDomain" : ObjectId("539977b104ac3d27431d0668"),
               "rawEmailStore" : "store/rawmails",
               "attachmentStore" : "store/attachments",
               "incomingMessageLimit" : 15728640
               "salt": "SOMESALT",
               "storeTextIndex": true,
               "smtpEncription" : 0,
               "smtpPass" : "smtpRelayPass",
               "smtpPort" : 25,
               "smtpServer" : "smtpRelayHostName",
               "smtpUser" : "smtpRelayUserName"
      }
      db.settings.insert(retriever_config)

    - Create the email index (unneded if storeTextIndex is false):
        use webmail
        db.emailIndexContents.ensureIndex({text: "text"}, {default_language: "none"})
        use testwebmail
        db.emailIndexContents.ensureIndex({text: "text"}, {default_language: "none"})
        use testwebmail_all
        db.emailIndexContents.ensureIndex({text: "text"}, {default_language: "none"})


CONFIG DIRECTORY AND MONGO DB USER
    - sudo mkdir /etc/webmail
    - sudo chown USUARIO:GRUPO /etc/webmail
    - sudo chmod 700 /etc/webmail
    - vim /etc/webmail/dbconnect.json:
        {
            type: "mongodb",
            host: "localhost",
            port: 27017,
            name: "webmail",
            testname: "testwebmail",
            user: "webmaildbuser",
            password: "SomePassword"
        }
    - Open the mongo console (mongo) and write:
        use admin;
        db.addUser("webmaildbuser", "SomePassword");
        db.shutdownServer();
        exit

    - Edit /etc/mongod.conf and set the auth option to true (usually commented)
    - sudo service mongodb restart
    (Now for opening the mongo console: mongo localhost:27017/admin -u webmaildbuser -p SomePassword)


DUB DEPENDENCIES
    - cd webmail/backend/source/webbackend
    - dub build


PATHS
    - create a symbolic link from the configured attachment rawEmailStore (by default
      PROJECT_DIR/store/attachments) to PROJECT_DIR/HTTPBACKEND_DIR/public/attachment:

      ln -s /var/www/SERVICEDIR/store/attachments /var/www/SERVICEDIR/backend/source/webbackend/public/attachment


DKIM
    - Run these commands:
        # apt-get install opendkim opendkim-tools
        # mkdir -pv /etc/opendkim/
        # cd /etc/opendkim/
        # opendkim-genkey -r -h rsa-sha256 -d your.domain.com -s mail
        # mv -v mail.private mail
        # cat mail.txt => put it as TXT DNS record

    - Edit /etc/opendkim/KeyTable and put:
    your.domain.com your.domain.com:mail:/etc/opendkim/mail

    - Edit /etc/opendkim/SigningTable
    *@your.domain.com your.domain.com

    - Edit /etc/opendkim/TrustedHosts
    127.0.0.1

    - Edit /etc /opendkim.conf:
        Canonicalization        relaxed/relaxed
        ExternalIgnoreList      refile:/etc/opendkim/TrustedHosts
        InternalHosts           refile:/etc/opendkim/TrustedHosts
        KeyTable                refile:/etc/opendkim/KeyTable
        LogWhy                  Yes
        MinimumKeyBits          1024
        Mode                    sv
        PidFile                 /var/run/opendkim/opendkim.pid
        SigningTable            refile:/etc/opendkim/SigningTable
        Socket                  inet:8891@localhost
        Syslog                  Yes
        SyslogSuccess           Yes
        TemporaryDirectory      /var/tmp
        UMask                   022
        UserID                  opendkim:opendkim

    - Run these commands:
        chown -Rv opendkim:opendkim /etc/opendkim
        chmod go-rwx /etc/opendkim/*

    - Configure Postfix, add this to /etc/postfix/main.cf:
        smtpd_milters           = inet:127.0.0.1:8891
        non_smtpd_milters       = $smtpd_milters
        milter_default_action   = accept

    - Restart dkim and postfix:
        service opendkim restart
        service postfix restart

TODO XXX

- Eliminar todos los procesos de Postfix que sean innecesarios
- Ver que más opciones de configuración tiene Postfix que puedan interesar (seguridad, etc)
- Pensar tests involucrando Postfix y el retriever
- SPF y PTR

Email services
  - PostMark
