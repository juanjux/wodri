Backend-API:
    - POST /message/:id/send
    Use vibe.d smtp module and the configured smtphost, smtplogin and smtppass, connect
    to the configured SMTP, send the generated raw email: class OutgoingEmail with a 
    constructor from Email, update the document with sendDate: (date) and remove draft 
    status.

Backend-Retriever:
    - al buscar el 
    - move all unittest to separate files inside db/tests
    - unittests: remove Conversation.something, create an instance instead
    - unittest for every curl call for wrong auth user

    Later:
    - general hunting of XXX and FIXMEs

    - Use log to log more warnings, specially on db.*

    - When the message failed to enter (validation error, or error on save)
      generate a rebound using our message sending system (when implemented)

    - Exception classes for the different parts that throw.

    - Retriever's integration test, use a Python script with the mail & smtp modules to
      parse the test mails collection changing the receiver from [myRealAddr] to
      [mongoTestAddr] before delivering to Postfix, create a MongoDB database
      "webmailtest", populate it, check that we receive every email, check that
      that the isValidAddress check is fine, check that the filters of the test DB
      apply correctly, check searches with the indexer, et cetera.

    - Sent the new changes in characterencodings.d to Ruppe

    - When adding or removing links from a conversation, update conversation.lastDate

Frontend:

Contacts:
    - When a message is received and the email is not found on the Contacts collection,
      store as a new contact with Name, Surname, Email, Tags and put the tag "autoinserted".

    - Use it for getting the shortnames in the ConversationSummary object.

All:
    - Write more dirty tests, most of them are clean
    - Authentication with scrypt hashing instead of MD5
    - Run dub with code converage option
    - Import cleanup (only imports and symbols really used)
    - See how to get around Mongo's 16MB document limit for bigger emails
      (GridFS?) Check is some email of my collection is bigger than 16MB without
      attachments (=> no)

Installation/Configuration system:
