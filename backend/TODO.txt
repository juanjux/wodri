Backend-API:
    - POST /message/:id/send
      + Revisar los XXX
      + Poner el draft a false.

    - Move to my server, test sending using Amazon SES with the wodri.com domain

Backend-Retriever:
    - Test send():
      + Write unittest
      + Configure Postfix (allow Auth and without Auth)
      + Send with and without auth
      + Send with and without TLS

    - Email document: add a "actionLog" to every email to record sending failures.

    - Investigate an implement the DKIM and other security checks, see page on my
      bookmarks, try it on my server.

    Later:
    - Contact DB and Api objects, contact DB driver.

    - general hunting of XXX and FIXMEs

    - Use log to log more warnings, specially on db.*

    - When the message failed to enter (validation error, or error on save)
      generate a rebound using our message sending system (when implemented)

    - Retriever's integration test, use a Python script with the mail & smtp
      modules to parse the test mails collection changing the receiver from
      [myRealAddr] to [mongoTestAddr] before delivering to Postfix, create a
      MongoDB database "webmailtest", populate it, check that we receive every
      email, check that that the isValidAddress check is fine, check that the
      filters of the test DB apply correctly, check searches with the indexer, et
      cetera.

    - When adding or removing links from a conversation, update
      conversation.lastDate.

Frontend:

Contacts:
    - When a message is received and the email is not found on the Contacts
      collection, store as a new contact with Name, Surname, Email, Tags and put
      the tag "autoinserted".

    - Use it for getting the shortnames in the ConversationSummary object.

All:
    - Write more dirty tests, most of them are clean / happy path

    - Run dub with code converage option

    - Import cleanup (only imports and symbols really used)

    - See how to get around Mongo's 16MB document limit for bigger emails
      (GridFS?) Check is some email of my collection is bigger than 16MB without
      attachments (=> no)


Installation/Configuration system:
    - make it almost-dumb-proof with a script-wizard (or web page) to:
      - check versions
      - install and configure dependencies (postfix, mongo, dub, D compiler,
        etc)
      - configure the mail system domain (ask for passwords, initial users, etc)
      - test the mail system
      - DNS configuration assistant with recipes for Amazon, Linode, etc.
