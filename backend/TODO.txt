Backend-API:
    - POST /message/:id/send

    Next: contacts API (document)

Backend-Retriever:
    - Email.send()

    - Contact DB and Api objects, contact DB driver.

    Later:
    - general hunting of XXX and FIXMEs

    - Use log to log more warnings, specially on db.*

    - When the message failed to enter (validation error, or error on save)
      generate a rebound using our message sending system (when implemented)

    - Retriever's integration test, use a Python script with the mail & smtp
      modules to parse the test mails collection changing the receiver from
      [myRealAddr] to [mongoTestAddr] before delivering to Postfix, create a
      MongoDB database "webmailtest", populate it, check that we receive every
      email, check that that the isValidAddress check is fine, check that the
      filters of the test DB apply correctly, check searches with the indexer, et
      cetera.

    - Sent the new changes in characterencodings.d to Ruppe
    (add encodeQuotedPrintable).

    - When adding or removing links from a conversation, update
      conversation.lastDate.

Frontend:

Contacts:
    - When a message is received and the email is not found on the Contacts
      collection, store as a new contact with Name, Surname, Email, Tags and put
      the tag "autoinserted".

    - Use it for getting the shortnames in the ConversationSummary object.

All:
    - Write more dirty tests, most of them are clean

    - Run dub with code converage option

    - Import cleanup (only imports and symbols really used)

    - See how to get around Mongo's 16MB document limit for bigger emails
      (GridFS?) Check is some email of my collection is bigger than 16MB without
      attachments (=> no)

Installation/Configuration system:
    - make it almost-dumb-proof with a script-wizard (or web page) to:
      - check versions
      - install and configure he Linux packages (postfix, mongo, dub, D compiler,
        etc)
      - configure the mail system domain (ask for passwords, initial users, etc)
      - test the mail system
